	/**
	 * Implements the JSON API for usermanager.
	 * <p>
	 * Even though this gets serialized whenever container shuts down/restarts, this gets reinstalled to
	 * the session when JSPWiki starts. This means that it's not actually necessary to save anything.
	 */
	/* :FVK: - удалить...
	public static final class JSONUserModule implements WikiAjaxServlet
	{
		private volatile UserManager m_manager;
	    
	    / **
	     *  Create a new JSONUserModule.
	     *  @param mgr Manager
	     * /
	    public JSONUserModule( UserManager mgr )
	    {
	        m_manager = mgr;
	    }
	    
	    @Override
	    public String getServletMapping() {
	    	return JSON_USERS;
	    }
	    
	    public void service(HttpServletRequest req, HttpServletResponse resp, String actionName, List<String> params) throws ServletException, IOException {
	    	try {
	    		String uid = null;
	        	if (params.size()<1) {
	        		return;
	        	}
	    		uid = params.get(0);
	        	log.debug("uid="+uid);
	        	if (StringUtils.isNotBlank(uid)) {
		            UserProfile prof = getUserInfo(uid);
		            resp.getWriter().write(AjaxUtil.toJson(prof));
	        	}
	    	} catch (NoSuchPrincipalException e) {
	    		throw new ServletException(e);
	    	}
	    }
	    
	    / **
	     *  Directly returns the UserProfile object attached to an uid.
	     *
	     *  @param uid The user id (e.g. WikiName)
	     *  @return A UserProfile object
	     *  @throws NoSuchPrincipalException If such a name does not exist.
	     * /
	    public UserProfile getUserInfo( String uid )
	        throws NoSuchPrincipalException
	    {
	        if( m_manager != null )
	        {
	            UserProfile prof = m_manager.getUserDatabase().find( uid );
	
	            return prof;
	        }
	        
	        throw new IllegalStateException("The manager is offline.");
	    }
	}*/

